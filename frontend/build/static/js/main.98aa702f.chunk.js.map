{"version":3,"sources":["constants/cartConstants.js","constants/userConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","screens/Homescreen.js","actions/productActions.js","constants/productConstants.js","screens/Productscreen.js","actions/cartActions.js","components/Message.js","screens/Cartscreen.js","components/Loader.js","components/FormContainer.js","screens/LoginScreen.js","screens/Registerscreen.js","screens/Shippingscreen.js","screens/Paymentscreen.js","screens/PlaceOrderscreen.js","App.js","reportWebVitals.js","index.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_SUCCESS","USER_LOGOUT","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Rating","value","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Homescreen","useEffect","a","axios","get","data","response","message","sm","md","lg","Productscreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","text","description","ListGroupItem","countInStock","Form","Control","onChange","e","target","Array","keys","Button","push","disabled","addToCart","getState","setItem","stringify","Message","children","Alert","defaultProps","Cartscreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","Loader","Spinner","animation","role","width","height","margin","display","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","login","Group","controlId","Label","placeholder","Registerscreen","setName","confirmPassword","setConfirmPassword","setMessage","register","Shippingscreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","Paymentscreen","setPaymentMethod","Check","label","PlaceOrderscreen","itemsPrice","shippingPrice","taxPrice","totalPrice","index","alert","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98aa702f.chunk.js","sourcesContent":["export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : []\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_LIST_REQUEST':\r\n            return { loading: true, products: [] }\r\n        case 'PRODUCT_LIST_SUCCESS':\r\n            return { loading: false, products: action.payload }\r\n        case 'PRODUCT_LIST_FAIL':\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case 'PRODUCT_DETAILS_REQUEST':\r\n            return { loading: true, ...state }\r\n        case 'PRODUCT_DETAILS_SUCCESS':\r\n            return { loading: false, product: action.payload }\r\n        case 'PRODUCT_DETAILS_FAIL':\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOGIN_REQUEST':\r\n            return { loading: true }\r\n        case 'USER_LOGIN_SUCCESS':\r\n            return { loading: false, userInfo: action.payload }\r\n        case 'USER_LOGIN_FAIL':\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'USER_REGISTER_REQUEST':\r\n            return { loading: true }\r\n        case 'USER_REGISTER_SUCCESS':\r\n            return { loading: false, userInfo: action.payload }\r\n        case 'USER_REGISTER_FAIL':\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n\r\n        <header>\r\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Gadget Grabber</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n\r\n                        <Nav className='ml-auto'>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                  </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                        </Nav>\r\n\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Header","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n} from \"../constants/userConstants\"\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyrights &copy; ProShop\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\nconst Rating = ({ value, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}></i>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'></Card.Img>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <h5>{product.name}</h5>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n\r\n                    <Rating value={product.rating} color='yellow' />\r\n                    <strong>{product.numReviews} reviews</strong>\r\n                </Card.Text>\r\n                <Card.Text as='div'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n\r\n\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Product","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst Homescreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h1>Latest Products</h1>\r\n            {loading\r\n                ? <h3>Loading....</h3> :\r\n                error\r\n                    ? <h3>{error}</h3>\r\n                    : <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Homescreen","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get('/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n\r\n    }\r\n}","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Card, ListGroupItem, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nconst Productscreen = ({ history, match }) => {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    return (\r\n        <>\r\n            <Link className='btn btn-dark my-3' to='/'>Go Back</Link>\r\n            {loading\r\n                ? <h3>Loading....</h3> :\r\n                error\r\n                    ? <h3>{error}</h3>\r\n                    : <Row>\r\n                        <Col md={6}>\r\n                            <Image src={product.image} alt={product.name} fluid></Image>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h3>{product.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating value={product.rating} text={`${product.numReviews}reviews`} />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price : ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description : {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col> ${product.price}</Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>{product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}</Col>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Qty</Col>\r\n                                                <Col><Form.Control\r\n                                                    as='select'\r\n                                                    value={qty}\r\n                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                >\r\n                                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n\r\n                                                    )\r\n\r\n                                                    )}\r\n                                                </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    <ListGroupItem>\r\n                                        <Row>\r\n                                            <Button\r\n                                                onClick={addToCartHandler}\r\n                                                className='btn-block' type=\"button\" disabled={product.countInStock === 0}>\r\n\r\n                                                Add To Cart\r\n                               </Button>\r\n                                        </Row>\r\n                                    </ListGroupItem>\r\n\r\n\r\n\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Productscreen\r\n\r\n\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst Cartscreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(item.product, Number(e.target.value))\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h4>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                  items</h4>\r\n                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}>\r\n                                Proceed To Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n}\r\n\r\nexport default Cartscreen\r\n\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","\r\nimport React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n        </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n          </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst Registerscreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n        </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n          </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Registerscreen","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst Shippingscreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n        </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Shippingscreen\r\n\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst Paymentscreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Cash')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Cash on Delivery'\r\n                            id='Cash'\r\n                            name='paymentMethod'\r\n                            value='Cash'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n        </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Paymentscreen","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\n//import { createOrder } from '../actions/orderActions'\r\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderscreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n    cart.itemsPrice = (cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = (Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    /*const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n  \r\n    useEffect(() => {\r\n      if (success) {\r\n        history.push(`/order/${order._id}`)\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [history, success])*/\r\n\r\n    const placeOrderHandler = () => {\r\n        alert('Your order is placed successfully')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderscreen","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Homescreen from './screens/Homescreen';\nimport Productscreen from './screens/Productscreen';\nimport Cartscreen from './screens/Cartscreen';\nimport LoginScreen from './screens/LoginScreen';\nimport Registerscreen from './screens/Registerscreen';\nimport Shippingscreen from './screens/Shippingscreen';\nimport Paymentscreen from './screens/Paymentscreen';\nimport PlaceOrderscreen from './screens/PlaceOrderscreen';\n\n\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/' component={Homescreen} exact />\n          <Route path='/product/:id' component={Productscreen} />\n          <Route path='/cart/:id?' component={Cartscreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={Registerscreen} />\n          <Route path='/shipping' component={Shippingscreen} />\n          <Route path='/payment' component={Paymentscreen} />\n          <Route path='/placeorder' component={PlaceOrderscreen} />\n\n\n\n        </Container>\n      </main>\n\n      <Footer />\n\n\n\n    </Router >\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <App />,\n  </Provider>,\n\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}