{"ast":null,"code":"import React,{useEffect}from'react';import{Link}from'react-router-dom';import{Button,Row,Col,ListGroup,Image,Card}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';//import { createOrder } from '../actions/orderActions'\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PlaceOrderscreen=function PlaceOrderscreen(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});if(!cart.shippingAddress.address){history.push('/shipping');}else if(!cart.paymentMethod){history.push('/payment');}cart.itemsPrice=cart.cartItems.reduce(function(acc,item){return acc+item.price*item.qty;},0);cart.shippingPrice=cart.itemsPrice>100?0:100;cart.taxPrice=Number((0.15*cart.itemsPrice).toFixed(2));cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2);/*const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n  \r\n    useEffect(() => {\r\n      if (success) {\r\n        history.push(`/order/${order._id}`)\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [history, success])*/var placeOrderHandler=function placeOrderHandler(){alert('Your order is placed successfully');};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:8,children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Shipping\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address:\"}),cart.shippingAddress.address,\", \",cart.shippingAddress.city,' ',cart.shippingAddress.postalCode,\",\",' ',cart.shippingAddress.country]})]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Method\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Method: \"}),cart.paymentMethod]}),/*#__PURE__*/_jsxs(ListGroup.Item,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Order Items\"}),cart.cartItems.length===0?/*#__PURE__*/_jsx(Message,{children:\"Your cart is empty\"}):/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:cart.cartItems.map(function(item,index){return/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:1,children:/*#__PURE__*/_jsx(Image,{src:item.image,alt:item.name,fluid:true,rounded:true})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Link,{to:\"/product/\".concat(item.product),children:item.name})}),/*#__PURE__*/_jsxs(Col,{md:4,children:[item.qty,\" x $\",item.price,\" = $\",item.qty*item.price]})]})},index);})})]})]})}),/*#__PURE__*/_jsx(Col,{md:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(ListGroup,{variant:\"flush\",children:[/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(\"h2\",{children:\"Order Summary\"})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Items\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.itemsPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Shipping\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.shippingPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Tax\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.taxPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:\"Total\"}),/*#__PURE__*/_jsxs(Col,{children:[\"$\",cart.totalPrice]})]})}),/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"button\",className:\"btn-block\",disabled:cart.cartItems===0,onClick:placeOrderHandler,children:\"Place Order\"})})]})})})]})});};export default PlaceOrderscreen;","map":{"version":3,"sources":["D:/proshop/frontend/src/screens/PlaceOrderscreen.js"],"names":["React","useEffect","Link","Button","Row","Col","ListGroup","Image","Card","useDispatch","useSelector","Message","PlaceOrderscreen","history","dispatch","cart","state","shippingAddress","address","push","paymentMethod","itemsPrice","cartItems","reduce","acc","item","price","qty","shippingPrice","taxPrice","Number","toFixed","totalPrice","placeOrderHandler","alert","city","postalCode","country","length","map","index","image","name","product"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\n//import { createOrder } from '../actions/orderActions'\r\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderscreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n    cart.itemsPrice = (cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = (Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    /*const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n  \r\n    useEffect(() => {\r\n      if (success) {\r\n        history.push(`/order/${order._id}`)\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n      }\r\n      // eslint-disable-next-line\r\n    }, [history, success])*/\r\n\r\n    const placeOrderHandler = () => {\r\n        alert('Your order is placed successfully')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderscreen"]},"metadata":{},"sourceType":"module"}